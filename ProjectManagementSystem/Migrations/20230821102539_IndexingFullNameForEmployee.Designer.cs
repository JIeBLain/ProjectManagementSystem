// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace ProjectManagementSystem.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230821102539_IndexingFullNameForEmployee")]
    partial class IndexingFullNameForEmployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PatronymicName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LastName", "FirstName", "PatronymicName");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2"),
                            BirthDate = new DateTime(1978, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vera1978@outlook.com",
                            FirstName = "Vera",
                            Gender = "Female",
                            LastName = "Andryushchenko",
                            PatronymicName = "Nikiforovna",
                            Phone = "+7 (942) 209-64-18"
                        },
                        new
                        {
                            Id = new Guid("fadc9f8c-7023-444e-bf23-d788bc0b0f7b"),
                            BirthDate = new DateTime(1990, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "taras13031990@hotmail.com",
                            FirstName = "Taras",
                            Gender = "Male",
                            LastName = "Krivov",
                            PatronymicName = "Daniilovich",
                            Phone = "+7 (936) 505-76-15"
                        },
                        new
                        {
                            Id = new Guid("17a5124d-ef58-4cc7-a2ad-91f4ee0677ed"),
                            BirthDate = new DateTime(1993, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "stepan1993@ya.ru",
                            FirstName = "Stepan",
                            Gender = "Male",
                            LastName = "Engelgardt",
                            PatronymicName = "Nikanorovich",
                            Phone = "+7 (945) 389-82-95"
                        },
                        new
                        {
                            Id = new Guid("89c34d1e-979b-4f9c-a41b-2db9cc0172d8"),
                            BirthDate = new DateTime(1986, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "varvara34@yandex.ru",
                            FirstName = "Varvara",
                            Gender = "Female",
                            LastName = "Korsakova",
                            PatronymicName = "Konstantinovna",
                            Phone = "+7 (920) 287-68-41"
                        },
                        new
                        {
                            Id = new Guid("2cd2000a-b580-4fce-be7e-07dbbe6685fa"),
                            BirthDate = new DateTime(1981, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "evgeniy52@hotmail.com",
                            FirstName = "Evgeny",
                            Gender = "Male",
                            LastName = "Bessonov",
                            PatronymicName = "Vasilievich",
                            Phone = "+7 (988) 418-40-86"
                        },
                        new
                        {
                            Id = new Guid("b6357c6d-171d-4382-9f3e-7db7760c55db"),
                            BirthDate = new DateTime(1996, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "roman1996@hotmail.com",
                            FirstName = "Roman",
                            Gender = "Male",
                            LastName = "Ivashev",
                            PatronymicName = "Alekseevich",
                            Phone = "+7 (986) 656-79-26"
                        },
                        new
                        {
                            Id = new Guid("5c2dfb33-d692-4690-92cd-a37ae08144ec"),
                            BirthDate = new DateTime(1980, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "semen8022@outlook.com",
                            FirstName = "Semyon",
                            Gender = "Male",
                            LastName = "Bibikov",
                            PatronymicName = "Afanasyevich",
                            Phone = "+7 (913) 989-58-31"
                        },
                        new
                        {
                            Id = new Guid("47ea38ca-233c-4f43-af5c-c69dbc1c002a"),
                            BirthDate = new DateTime(1992, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariya89@rambler.ru",
                            FirstName = "Maria",
                            Gender = "Female",
                            LastName = "Kondratieva",
                            PatronymicName = "Yurievna",
                            Phone = "+7 (960) 807-19-78"
                        },
                        new
                        {
                            Id = new Guid("4ebe2333-57aa-421a-9ea8-fc8fdb9838a4"),
                            BirthDate = new DateTime(1980, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ilya.yuhtric@outlook.com",
                            FirstName = "Ilya",
                            Gender = "Male",
                            LastName = "Yukhtrits",
                            PatronymicName = "Gerasimovich",
                            Phone = "+7 (966) 747-44-68"
                        },
                        new
                        {
                            Id = new Guid("c92fbb01-10f1-4f54-894a-0a3a560f2d63"),
                            BirthDate = new DateTime(1988, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pavel2404@outlook.com",
                            FirstName = "Pavel",
                            Gender = "Male",
                            LastName = "Khoroshilov",
                            PatronymicName = "Yakovlevich",
                            Phone = "+7 (953) 115-54-54"
                        });
                });

            modelBuilder.Entity("Entities.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectId");

                    b.Property<string>("ContractorCompany")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CustomerCompany")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9de832e-4732-442f-b7fd-ef4c035a99e2"),
                            ContractorCompany = "DevShare",
                            CustomerCompany = "Tagcat",
                            EndTime = new DateTime(2024, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zoolab",
                            Priority = 1,
                            StartTime = new DateTime(2023, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a99d6d3c-9269-41da-a967-64dddd97ca3e"),
                            ContractorCompany = "DevShare",
                            CustomerCompany = "Roombo",
                            EndTime = new DateTime(2023, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bigtax",
                            Priority = 3,
                            StartTime = new DateTime(2023, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("41c1b4fe-63f2-4c8e-a02f-76027ccf7335"),
                            ContractorCompany = "DevShare",
                            CustomerCompany = "Zoomdog",
                            EndTime = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cookley",
                            Priority = 2,
                            StartTime = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Entities.Models.ProjectEmployee", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("a99d6d3c-9269-41da-a967-64dddd97ca3e"),
                            EmployeeId = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2"),
                            ProjectManagerId = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2")
                        },
                        new
                        {
                            ProjectId = new Guid("a99d6d3c-9269-41da-a967-64dddd97ca3e"),
                            EmployeeId = new Guid("fadc9f8c-7023-444e-bf23-d788bc0b0f7b"),
                            ProjectManagerId = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2")
                        },
                        new
                        {
                            ProjectId = new Guid("a99d6d3c-9269-41da-a967-64dddd97ca3e"),
                            EmployeeId = new Guid("89c34d1e-979b-4f9c-a41b-2db9cc0172d8"),
                            ProjectManagerId = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2")
                        },
                        new
                        {
                            ProjectId = new Guid("a99d6d3c-9269-41da-a967-64dddd97ca3e"),
                            EmployeeId = new Guid("b6357c6d-171d-4382-9f3e-7db7760c55db"),
                            ProjectManagerId = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2")
                        },
                        new
                        {
                            ProjectId = new Guid("a99d6d3c-9269-41da-a967-64dddd97ca3e"),
                            EmployeeId = new Guid("5c2dfb33-d692-4690-92cd-a37ae08144ec"),
                            ProjectManagerId = new Guid("774ef45f-9896-41fc-ac08-b16e6b3cc2a2")
                        },
                        new
                        {
                            ProjectId = new Guid("41c1b4fe-63f2-4c8e-a02f-76027ccf7335"),
                            EmployeeId = new Guid("4ebe2333-57aa-421a-9ea8-fc8fdb9838a4"),
                            ProjectManagerId = new Guid("4ebe2333-57aa-421a-9ea8-fc8fdb9838a4")
                        },
                        new
                        {
                            ProjectId = new Guid("41c1b4fe-63f2-4c8e-a02f-76027ccf7335"),
                            EmployeeId = new Guid("17a5124d-ef58-4cc7-a2ad-91f4ee0677ed"),
                            ProjectManagerId = new Guid("4ebe2333-57aa-421a-9ea8-fc8fdb9838a4")
                        },
                        new
                        {
                            ProjectId = new Guid("41c1b4fe-63f2-4c8e-a02f-76027ccf7335"),
                            EmployeeId = new Guid("47ea38ca-233c-4f43-af5c-c69dbc1c002a"),
                            ProjectManagerId = new Guid("4ebe2333-57aa-421a-9ea8-fc8fdb9838a4")
                        },
                        new
                        {
                            ProjectId = new Guid("41c1b4fe-63f2-4c8e-a02f-76027ccf7335"),
                            EmployeeId = new Guid("c92fbb01-10f1-4f54-894a-0a3a560f2d63"),
                            ProjectManagerId = new Guid("4ebe2333-57aa-421a-9ea8-fc8fdb9838a4")
                        },
                        new
                        {
                            ProjectId = new Guid("f9de832e-4732-442f-b7fd-ef4c035a99e2"),
                            EmployeeId = new Guid("2cd2000a-b580-4fce-be7e-07dbbe6685fa"),
                            ProjectManagerId = new Guid("2cd2000a-b580-4fce-be7e-07dbbe6685fa")
                        },
                        new
                        {
                            ProjectId = new Guid("f9de832e-4732-442f-b7fd-ef4c035a99e2"),
                            EmployeeId = new Guid("17a5124d-ef58-4cc7-a2ad-91f4ee0677ed"),
                            ProjectManagerId = new Guid("2cd2000a-b580-4fce-be7e-07dbbe6685fa")
                        },
                        new
                        {
                            ProjectId = new Guid("f9de832e-4732-442f-b7fd-ef4c035a99e2"),
                            EmployeeId = new Guid("c92fbb01-10f1-4f54-894a-0a3a560f2d63"),
                            ProjectManagerId = new Guid("2cd2000a-b580-4fce-be7e-07dbbe6685fa")
                        },
                        new
                        {
                            ProjectId = new Guid("f9de832e-4732-442f-b7fd-ef4c035a99e2"),
                            EmployeeId = new Guid("47ea38ca-233c-4f43-af5c-c69dbc1c002a"),
                            ProjectManagerId = new Guid("2cd2000a-b580-4fce-be7e-07dbbe6685fa")
                        });
                });

            modelBuilder.Entity("Entities.Models.ProjectEmployee", b =>
                {
                    b.HasOne("Entities.Models.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Employee", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId");

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");
                });

            modelBuilder.Entity("Entities.Models.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
